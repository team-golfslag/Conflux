name: publish-typescript-client-and-docs
on:
    push:
        branches:
            - main
    workflow_dispatch:
        
env:
    ASPNETCORE_ENVIRONMENT: "Workflow"
    DOTNET_ENVIRONMENT: "Workflow"
    SRAM_CLIENT_SECRET: ${{ secrets.SRAM_CLIENT_SECRET }}
    name: github-pages
    url: ${{ steps.deployment.outputs.page_url }}

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
    group: "pages"
    cancel-in-progress: false

jobs:
    publish-typescript-client:
        runs-on: ubuntu-latest
        permissions:
            contents: write # to be able to publish a GitHub release
            pull-requests: write # to be able to comment on released pull requests
            actions: read
            pages: write
            id-token: write
        steps:
            -   uses: actions/checkout@v4
                with:
                    fetch-depth: 0

            -   uses: actions/setup-dotnet@v4
                with:
                    dotnet-version: '9.x'
            
            -   uses: actions/setup-node@v4
            
            -   name: Install NSwag CLI
                run: |
                    dotnet tool install --global NSwag.ConsoleCore
                    dotnet tool install --global docfx
            
            -   name: Build project
                run: dotnet build --no-incremental
            
            -   name: Run project
                run: |
                    cd Conflux.API
                    dotnet run &

                    echo "Waiting for Swagger API to start..."
                    for i in {1..20}; do
                      if curl --silent http://localhost:8000/swagger/v1/swagger.json > /dev/null; then
                        echo "API is up!"
                        break
                      fi
                      echo "Waiting ($i)..."
                      sleep 2
                    done
            
            -   name: Generate API-client
                run: |
                    cd Conflux.API
                    nswag run
            
            -   name: Build NPM package
                run: |
                    cd conflux-api-client
                    npm i
                    npm run build
            
            -   name: Publish NPM package
                run: |
                    cd conflux-api-client
                    npx semantic-release
                env:
                    NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
                    NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
                    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   name: Generate docfx
                run: docfx docfx.json
            
            -   name: Generate typedoc
                run: |
                    cd conflux-api-client
                    npx typedoc src/client.ts --html ../_site/conflux-api-client-docs
                    
            -   name: Upload artifact
                uses: actions/upload-pages-artifact@v3
                with:
                    # Upload entire repository
                    path: '_site'
        
            -   name: Deploy to GitHub Pages
                id: deployment
                uses: actions/deploy-pages@v4
                    
                    
            